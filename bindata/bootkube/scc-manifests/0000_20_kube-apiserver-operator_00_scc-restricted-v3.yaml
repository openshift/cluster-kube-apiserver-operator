allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: false
allowPrivilegedContainer: false
allowedCapabilities:
- NET_BIND_SERVICE
apiVersion: security.openshift.io/v1
defaultAddCapabilities:
fsGroup:
  type: MustRunAs
  ranges:
  - min: 1000
    max: 65534
groups: []
kind: SecurityContextConstraints
metadata:
  annotations:
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    kubernetes.io/description: restricted-v3 denies access to all host features and requires
      pods to be run with user namespace (and may not be root within that user namespace),
      and SELinux context that are allocated to the namespace. This is the most restrictive SCC.
      On top of the legacy 'restricted' SCC, it also requires to drop ALL capabilities
      and does not allow privilege escalation binaries. It will also default the seccomp
      profile to runtime/default if unset, otherwise this seccomp profile is required.
      On top of the legacy 'restricted-v2' SCC, it requires a pod runs in a user namespace.
      Because of this, the pod to be any non-root UID within the user namespace (between 1000-65534), and
      it will still be unprivileged outside of the user namespace.
  name: restricted-v3
priority:
readOnlyRootFilesystem: false
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAsRange
  uidRangeMin: 1000
  uidRangeMax: 65534
seLinuxContext:
  type: MustRunAs
seccompProfiles:
- runtime/default
supplementalGroups:
  type: MustRunAs
  ranges:
  - min: 1000
    max: 65534
users: []
userNamespaceLevel: RequirePodLevel
volumes:
- configMap
- csi
- downwardAPI
- emptyDir
- ephemeral
- persistentVolumeClaim
- projected
- secret
